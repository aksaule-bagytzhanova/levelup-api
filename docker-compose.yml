version: '3'

services:
  web:
    container_name: web
    build:
      context: src
      dockerfile: Dockerfile
    volumes:
      - ./src/:/app
    ports:
      - "8001:8000"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    entrypoint: ["/app/entrypoint.sh"]

  db:
    container_name: db
    image: postgis/postgis:15-3.4
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    env_file:
      - .env

  redis:
    container_name: redis
    image: redis:7.0-alpine
    volumes:
      - redis_data:/data
    restart: always
  
  # celery_worker:
  #   container_name: celery_worker
  #   build:
  #     context: src
  #     dockerfile: Dockerfile
  #   command: celery -A inside worker --loglevel=info
  #   depends_on:
  #     - web
  #     - redis
  #   restart: always
  #   env_file:
  #     - .env

  # celery_beat:
  #   container_name: celery_beat
  #   build:
  #     context: src
  #     dockerfile: Dockerfile
  #   command: celery -A inside beat --loglevel=info
  #   depends_on:
  #     - web
  #     - redis
  #   restart: always
  #   env_file:
  #     - .env


volumes:
  postgres_data:
  redis_data:
  # static_volume:
  # media_volume:
